#!/usr/bin/env python3
"""
–ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô Core –º–æ–¥—É–ª—å - —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–µ –º–µ—Å—Ç–æ –¥–ª—è –≤—Å–µ—Ö –±–∞–∑–æ–≤—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
=======================================================================

üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø v6.8.8:
‚úÖ –î–æ–±–∞–≤–ª–µ–Ω –∏–º–ø–æ—Ä—Ç unified_config –∫–∞–∫ config –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
‚úÖ –ë–µ–∑–æ–ø–∞—Å–Ω—ã–µ –∏–º–ø–æ—Ä—Ç—ã —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∞–ª–∏–∞—Å—ã –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
‚úÖ –≠–∫—Å–ø–æ—Ä—Ç –≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤

–ü—É—Ç—å: src/core/__init__.py
"""

import logging
logger = logging.getLogger(__name__)

# =================================================================
# –ò–ú–ü–û–†–¢ –ú–û–î–ï–õ–ï–ô - –ë–ï–ó–û–ü–ê–°–ù–û
# =================================================================

try:
    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤—Å–µ –º–æ–¥–µ–ª–∏ –∏–∑ models.py (–ï–î–ò–ù–°–¢–í–ï–ù–ù–´–ô –ò–°–¢–û–ß–ù–ò–ö –ú–û–î–ï–õ–ï–ô)
    from .models import (
        Base,
        # Enums
        TradeStatus,
        OrderSide,
        OrderType,
        SignalAction,
        # Models
        User,
        BotSettings,
        BotState,
        Balance,
        TradingPair,
        Signal,
        Trade,
        Order,
        Candle,
        MarketCondition,
        StrategyPerformance,
        MLModel,
        MLPrediction,
        TradeMLPrediction,
        NewsAnalysis,
        SocialSignal,
        TradingLog
    )
    MODELS_AVAILABLE = True
    logger.info("‚úÖ –ú–æ–¥–µ–ª–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ")
except ImportError as e:
    logger.warning(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥–µ–ª–µ–π: {e}")
    MODELS_AVAILABLE = False
    # –°–æ–∑–¥–∞–µ–º –∑–∞–≥–ª—É—à–∫–∏ –¥–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π
    Base = None
    TradeStatus = OrderSide = OrderType = SignalAction = None
    User = BotSettings = BotState = Balance = TradingPair = None
    Signal = Trade = Order = Candle = MarketCondition = None
    StrategyPerformance = MLModel = MLPrediction = TradeMLPrediction = None
    NewsAnalysis = SocialSignal = TradingLog = None

# =================================================================
# –ò–ú–ü–û–†–¢ –ë–ê–ó–´ –î–ê–ù–ù–´–• - –ë–ï–ó–û–ü–ê–°–ù–û
# =================================================================

try:
    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    from .database import (
        Database,
        db,
        engine,
        SessionLocal,
        get_db,
        get_session,
        create_session,
        transaction
    )
    DATABASE_AVAILABLE = True
    logger.info("‚úÖ –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ")
except ImportError as e:
    logger.warning(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
    DATABASE_AVAILABLE = False
    # –°–æ–∑–¥–∞–µ–º –∑–∞–≥–ª—É—à–∫–∏
    Database = db = engine = SessionLocal = None
    get_db = get_session = create_session = transaction = None

# =================================================================
# –ò–ú–ü–û–†–¢ –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò - –ò–°–ü–†–ê–í–õ–ï–ù–û
# =================================================================

try:
    # ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º unified_config
    from .unified_config import unified_config
    
    # ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –°–æ–∑–¥–∞–µ–º –∞–ª–∏–∞—Å—ã –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
    config = unified_config
    settings = unified_config
    
    CONFIG_AVAILABLE = True
    logger.info("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
    logger.info(f"üìã –†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã: {getattr(unified_config, 'ENVIRONMENT', 'unknown')}")
    
except ImportError as e:
    logger.error(f"‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –ù–µ —É–¥–∞–ª–æ—Å—å –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å unified_config: {e}")
    CONFIG_AVAILABLE = False
    
    # –°–æ–∑–¥–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é –∑–∞–≥–ª—É—à–∫—É –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    class MinimalConfig:
        """–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∑–∞–≥–ª—É—à–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è –∞–≤–∞—Ä–∏–π–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞"""
        ENVIRONMENT = os.getenv('ENVIRONMENT', 'development')
        TESTNET = os.getenv('TESTNET', 'true').lower() == 'true'
        PAPER_TRADING = os.getenv('PAPER_TRADING', 'false').lower() == 'true'
        LIVE_TRADING = os.getenv('LIVE_TRADING', 'true').lower() == 'true'
        
        def __getattr__(self, name):
            logger.warning(f"‚ö†Ô∏è –ü–æ–ø—ã—Ç–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–µ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {name}")
            return None
    
    unified_config = MinimalConfig()
    config = unified_config
    settings = unified_config

# =================================================================
# –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –ò–ú–ü–û–†–¢–´
# =================================================================

# –ü–æ–ø—ã—Ç–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ bybit_config (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π)
try:
    from .bybit_config import bybit_config
    BYBIT_CONFIG_AVAILABLE = True
    logger.info("‚úÖ Bybit –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞")
except ImportError:
    bybit_config = None
    BYBIT_CONFIG_AVAILABLE = False
    logger.info("‚ÑπÔ∏è Bybit –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ (–Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ)")

# =================================================================
# –§–£–ù–ö–¶–ò–ò –ü–†–û–í–ï–†–ö–ò –î–û–°–¢–£–ü–ù–û–°–¢–ò
# =================================================================

def check_core_components() -> dict:
    """
    –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ core –º–æ–¥—É–ª—è
    
    Returns:
        dict: –°—Ç–∞—Ç—É—Å –∫–∞–∂–¥–æ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
    """
    status = {
        'models': MODELS_AVAILABLE,
        'database': DATABASE_AVAILABLE, 
        'config': CONFIG_AVAILABLE,
        'bybit_config': BYBIT_CONFIG_AVAILABLE,
        'critical_components': MODELS_AVAILABLE and DATABASE_AVAILABLE and CONFIG_AVAILABLE
    }
    
    # –õ–æ–≥–∏—Ä—É–µ–º —Å—Ç–∞—Ç—É—Å
    for component, available in status.items():
        if component != 'critical_components':
            emoji = "‚úÖ" if available else "‚ùå"
            logger.info(f"   {emoji} {component}: {available}")
    
    return status

def get_db_session():
    """
    –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–µ—Å—Å–∏–∏ –ë–î
    
    Returns:
        Session –∏–ª–∏ None –ø—Ä–∏ –æ—à–∏–±–∫–µ
    """
    if not DATABASE_AVAILABLE or not SessionLocal:
        logger.warning("‚ö†Ô∏è –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
        return None
        
    try:
        return SessionLocal()
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Å—Å–∏–∏ –ë–î: {e}")
        return None

def get_config_value(key: str, default=None):
    """
    –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    
    Args:
        key: –ù–∞–∑–≤–∞–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞
        default: –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        
    Returns:
        –ó–Ω–∞—á–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏–ª–∏ default
    """
    if not CONFIG_AVAILABLE:
        logger.warning(f"‚ö†Ô∏è –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –∫–ª—é—á–∞: {key}")
        return default
        
    try:
        return getattr(unified_config, key, default)
    except Exception as e:
        logger.warning(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ {key}: {e}")
        return default

# =================================================================
# –î–ò–ê–ì–ù–û–°–¢–ò–ß–ï–°–ö–ò–ï –§–£–ù–ö–¶–ò–ò
# =================================================================

def diagnose_core_issues():
    """–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º –≤ core –º–æ–¥—É–ª–µ"""
    issues = []
    
    if not MODELS_AVAILABLE:
        issues.append("‚ùå –ú–æ–¥–µ–ª–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ src/core/models.py")
    
    if not DATABASE_AVAILABLE:
        issues.append("‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ src/core/database.py")
        
    if not CONFIG_AVAILABLE:
        issues.append("‚ùå –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ src/core/unified_config.py")
    
    if issues:
        logger.error("üö® –û–ë–ù–ê–†–£–ñ–ï–ù–´ –ü–†–û–ë–õ–ï–ú–´ –í CORE –ú–û–î–£–õ–ï:")
        for issue in issues:
            logger.error(f"   {issue}")
    else:
        logger.info("‚úÖ –í—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã core –º–æ–¥—É–ª—è —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    
    return issues

# =================================================================
# –≠–ö–°–ü–û–†–¢ –í–°–ï–• –ö–û–ú–ü–û–ù–ï–ù–¢–û–í
# =================================================================

__all__ = [
    # –°—Ç–∞—Ç—É—Å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
    'MODELS_AVAILABLE',
    'DATABASE_AVAILABLE', 
    'CONFIG_AVAILABLE',
    'BYBIT_CONFIG_AVAILABLE',
    
    # –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–∞)
    'Base',
    
    # Enums (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω—ã)
    'TradeStatus',
    'OrderSide', 
    'OrderType',
    'SignalAction',
    
    # Models (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω—ã)
    'User',
    'BotSettings',
    'BotState',
    'Balance',
    'TradingPair',
    'Signal',
    'Trade',
    'Order',
    'Candle',
    'MarketCondition',
    'StrategyPerformance',
    'MLModel',
    'MLPrediction',
    'TradeMLPrediction',
    'NewsAnalysis',
    'SocialSignal',
    'TradingLog',
    
    # Database (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–∞)
    'Database',
    'db',
    'engine',
    'SessionLocal',
    'get_db',
    'get_session',
    'create_session',
    'transaction',
    
    # Config (–ò–°–ü–†–ê–í–õ–ï–ù–û)
    'unified_config',
    'config',           # ‚úÖ –ê–ª–∏–∞—Å –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
    'settings',         # ‚úÖ –ê–ª–∏–∞—Å –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
    'bybit_config',     # ‚úÖ –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Bybit
    
    # –§—É–Ω–∫—Ü–∏–∏
    'check_core_components',
    'get_db_session',
    'get_config_value',
    'diagnose_core_issues'
]

# =================================================================
# –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ê–Ø –ü–†–û–í–ï–†–ö–ê –ü–†–ò –ò–ú–ü–û–†–¢–ï
# =================================================================

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ
logger.info("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ core –º–æ–¥—É–ª—è...")
component_status = check_core_components()

if component_status['critical_components']:
    logger.info("‚úÖ –í—Å–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –¥–æ—Å—Ç—É–ø–Ω—ã")
else:
    logger.warning("‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã")
    diagnose_core_issues()

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫—Ä–∞—Ç–∫—É—é —Å–≤–æ–¥–∫—É
logger.info(f"üìä Core —Å—Ç–∞—Ç—É—Å: Models={MODELS_AVAILABLE}, DB={DATABASE_AVAILABLE}, Config={CONFIG_AVAILABLE}")

# ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –£–±–µ–∂–¥–∞–µ–º—Å—è —á—Ç–æ config –¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞
if not CONFIG_AVAILABLE:
    logger.error("üö® –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: unified_config –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω!")
    logger.error("üí° –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ —Ñ–∞–π–ª src/core/unified_config.py —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –æ—à–∏–±–æ–∫")
else:
    logger.info("‚úÖ unified_config –¥–æ—Å—Ç—É–ø–µ–Ω –∫–∞–∫ 'config' –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏")