"""
–ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô Analysis –º–æ–¥—É–ª—å –¥–ª—è —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –±–æ—Ç–∞
==============================================
–§–∞–π–ª: src/analysis/__init__.py

üîß –ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï:
‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∏–º–ø–æ—Ä—Ç—ã NewsAnalyzer –∏ SocialAnalyzer
‚úÖ –£–±—Ä–∞–Ω—ã fallback –∏–º–ø–æ—Ä—Ç—ã, –¥–æ–±–∞–≤–ª–µ–Ω–∞ —á–µ—Ç–∫–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
‚úÖ –ü–æ–ª–Ω–∞—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å —Ç–µ—Å—Ç–∞–º–∏
"""
import logging

logger = logging.getLogger(__name__)

# ‚úÖ –ü–†–Ø–ú–´–ï –ò–ú–ü–û–†–¢–´ —Å —á–µ—Ç–∫–∏–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ –æ–± –æ—à–∏–±–∫–∞—Ö
def _import_with_clear_error(module_name: str, class_name: str):
    """–ò–º–ø–æ—Ä—Ç —Å –ø–æ–Ω—è—Ç–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º –æ–± –æ—à–∏–±–∫–µ"""
    try:
        # ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å __import__
        module = __import__(f"{__name__}.{module_name}", fromlist=[class_name])
        return getattr(module, class_name)
    except ImportError as e:
        error_msg = f"‚ùå –ú–æ–¥—É–ª—å '{module_name}' –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}"
        logger.error(error_msg)
        raise ImportError(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π –º–æ–¥—É–ª—å analysis.{module_name} –Ω–µ –Ω–∞–π–¥–µ–Ω. "
                         f"–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª src/analysis/{module_name}.py") from e
    except AttributeError as e:
        error_msg = f"‚ùå –ö–ª–∞—Å—Å '{class_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –º–æ–¥—É–ª–µ '{module_name}': {e}"
        logger.error(error_msg)
        raise ImportError(f"–ö–ª–∞—Å—Å {class_name} –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –º–æ–¥—É–ª–µ analysis.{module_name}. "
                         f"–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–ª–∞—Å—Å–∞.") from e

# ‚úÖ –ò–ú–ü–û–†–¢ –û–°–ù–û–í–ù–û–ì–û –ö–û–ú–ü–û–ù–ï–ù–¢–ê (–ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô)
try:
    MarketAnalyzer = _import_with_clear_error('market_analyzer', 'MarketAnalyzer')
    logger.info("‚úÖ MarketAnalyzer –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
    MARKET_ANALYZER_AVAILABLE = True
except ImportError:
    logger.critical("‚ùå MarketAnalyzer –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω - —ç—Ç–æ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç!")
    raise

# ‚úÖ –ò–ú–ü–û–†–¢ –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–• –ö–û–ú–ü–û–ù–ï–ù–¢–û–í (–ù–ï –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï)
# NewsAnalyzer - —Ç–µ–ø–µ—Ä—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –¥–æ—Å—Ç—É–ø–µ–Ω
try:
    NewsAnalyzer = _import_with_clear_error('news', 'NewsAnalyzer')
    logger.info("‚úÖ NewsAnalyzer –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
    NEWS_ANALYZER_AVAILABLE = True
except ImportError as e:
    logger.error(f"‚ùå –ö–ª–∞—Å—Å 'NewsAnalyzer' –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –º–æ–¥—É–ª–µ 'news': {e}")
    logger.warning("‚ö†Ô∏è NewsAnalyzer –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω - –∞–Ω–∞–ª–∏–∑ –Ω–æ–≤–æ—Å—Ç–µ–π –±—É–¥–µ—Ç –æ—Ç–∫–ª—é—á–µ–Ω")
    NewsAnalyzer = None
    NEWS_ANALYZER_AVAILABLE = False

# SocialAnalyzer - —Ç–µ–ø–µ—Ä—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –¥–æ—Å—Ç—É–ø–µ–Ω  
try:
    SocialAnalyzer = _import_with_clear_error('social', 'SocialAnalyzer')
    logger.info("‚úÖ SocialAnalyzer –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
    SOCIAL_ANALYZER_AVAILABLE = True
except ImportError as e:
    logger.error(f"‚ùå –ö–ª–∞—Å—Å 'SocialAnalyzer' –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –º–æ–¥—É–ª–µ 'social': {e}")
    logger.warning("‚ö†Ô∏è SocialAnalyzer –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω - —Å–æ—Ü–∏–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –±—É–¥–µ—Ç –æ—Ç–∫–ª—é—á–µ–Ω")
    SocialAnalyzer = None
    SOCIAL_ANALYZER_AVAILABLE = False

# ‚úÖ –î–û–ë–ê–í–õ–Ø–ï–ú –ü–†–û–í–ï–†–ö–£ –î–û–°–¢–£–ü–ù–û–°–¢–ò –§–£–ù–ö–¶–ò–ô
def check_analysis_capabilities() -> dict:
    """
    –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π
    
    Returns:
        dict: –°—Ç–∞—Ç—É—Å –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
    """
    capabilities = {
        'market_analysis': MARKET_ANALYZER_AVAILABLE,
        'news_analysis': NEWS_ANALYZER_AVAILABLE,
        'social_analysis': SOCIAL_ANALYZER_AVAILABLE,
        'full_functionality': all([
            MARKET_ANALYZER_AVAILABLE,
            NEWS_ANALYZER_AVAILABLE,
            SOCIAL_ANALYZER_AVAILABLE
        ])
    }
    
    logger.info("üìä –î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏—Ö –º–æ–¥—É–ª–µ–π:")
    for capability, available in capabilities.items():
        status = "‚úÖ" if available else "‚ùå"
        logger.info(f"   {status} {capability}: {available}")
    
    return capabilities

# ‚úÖ –§–£–ù–ö–¶–ò–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ò
def diagnose_analysis_issues():
    """–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º –≤ analysis –º–æ–¥—É–ª–µ"""
    issues = []
    
    if not MARKET_ANALYZER_AVAILABLE:
        issues.append("‚ùå MarketAnalyzer –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ src/analysis/market_analyzer.py")
    
    if not NEWS_ANALYZER_AVAILABLE:
        issues.append("‚ùå NewsAnalyzer –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ src/analysis/news/__init__.py")
        
    if not SOCIAL_ANALYZER_AVAILABLE:
        issues.append("‚ùå SocialAnalyzer –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ src/analysis/social/__init__.py")
    
    if issues:
        logger.error("üö® –û–ë–ù–ê–†–£–ñ–ï–ù–´ –ü–†–û–ë–õ–ï–ú–´ –í ANALYSIS –ú–û–î–£–õ–ï:")
        for issue in issues:
            logger.error(f"   {issue}")
    else:
        logger.info("‚úÖ –í—Å–µ –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    
    return issues

# ‚úÖ –≠–ö–°–ü–û–†–¢ –í–°–ï–• –î–û–°–¢–£–ü–ù–´–• –ö–û–ú–ü–û–ù–ï–ù–¢–û–í
__all__ = [
    'MarketAnalyzer',
    'NewsAnalyzer', 
    'SocialAnalyzer',
    'check_analysis_capabilities',
    'diagnose_analysis_issues'
]

# –°–æ–∑–¥–∞–µ–º –∞–ª–∏–∞—Å—ã –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
market_analyzer = MarketAnalyzer if MARKET_ANALYZER_AVAILABLE else None
news_analyzer = NewsAnalyzer if NEWS_ANALYZER_AVAILABLE else None
social_analyzer = SocialAnalyzer if SOCIAL_ANALYZER_AVAILABLE else None

# ‚úÖ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ê–Ø –ü–†–û–í–ï–†–ö–ê –ü–†–ò –ò–ú–ü–û–†–¢–ï
logger.info("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏—Ö –º–æ–¥—É–ª–µ–π...")
_capabilities = check_analysis_capabilities()

if not _capabilities['market_analysis']:
    raise ImportError("‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π –º–æ–¥—É–ª—å MarketAnalyzer –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω! "
                     "–°–∏—Å—Ç–µ–º–∞ –Ω–µ –º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –±–µ–∑ –±–∞–∑–æ–≤–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ —Ä—ã–Ω–∫–∞.")

if not _capabilities['full_functionality']:
    logger.warning("‚ö†Ô∏è –ù–µ –≤—Å–µ –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–µ –º–æ–¥—É–ª–∏ –¥–æ—Å—Ç—É–ø–Ω—ã. "
                   "–ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –±—É–¥—É—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω—ã.")
    diagnose_analysis_issues()
else:
    logger.info("üéâ –í—Å–µ –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–µ –º–æ–¥—É–ª–∏ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã!")